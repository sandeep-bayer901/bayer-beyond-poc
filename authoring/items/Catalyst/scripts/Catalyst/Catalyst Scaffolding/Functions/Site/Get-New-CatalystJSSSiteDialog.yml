---
ID: "9b2970d4-5ddc-49a5-81f6-bb94f426296e"
Parent: "81b95bdd-5156-4c7c-946d-d0e4bf0150c4"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: "/sitecore/system/Modules/PowerShell/Script Library/Catalyst/Catalyst Scaffolding/Functions/Site/Get-New-CatalystJSSSiteDialog"
SharedFields:
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    function Get-New-CatalystJSSSiteDialog {
            [CmdletBinding()]
            param(
                [Parameter(Mandatory = $true, Position = 0 )]
                [Item]$SiteLocation,
                [Parameter(Mandatory = $true, Position = 1 )]
                [Item]$RootItem,
                [Parameter(Mandatory = $true, Position = 2 )]
                [Bool]$Blueprint
            )
    
            begin {
                Write-Verbose "Cmdlet Get-NewJSSSiteDialog - Begin"
                Import-Function Get-ForbiddenSiteName
                Import-Function Get-ValidSiteSetupDefinition
                Import-Function Get-TenantTemplatesRoot
                Import-Function Get-TenantTemplate
                Import-Function Get-SiteDefinitions  
                Import-Function Get-OrderedDictionaryByKey
                Import-Function Get-JSSSiteDefinition
                Import-Function Get-HeadlessTenantDefinition
                Import-Function Get-InvokedTenantAction
                Import-Function Invoke-InputValidationStep
                Write-Progress -Activity ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::PreparingNewSiteDialog)) -CurrentOperation ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::BuildingNewSiteDialog)) -PercentComplete 0
            }
    
            process {
                Write-Verbose "Cmdlet Get-NewJSSSiteDialog - Process"
                Write-Progress -Activity ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::PreparingNewSiteDialog)) -CurrentOperation ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::GettingTenantTemplates)) -PercentComplete 20
                $TenantTemplates = Get-TenantTemplate (Get-TenantTemplatesRoot $SiteLocation)
    
    
                $dialogOptions = New-Object System.Collections.Specialized.OrderedDictionary
    
                [Item[]]$allDefinitions = Get-JSSSiteDefinition "*"
    
                Write-Progress -Activity ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::PreparingNewSiteDialog)) -CurrentOperation ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::GettingValidSiteDefinitions)) -PercentComplete 30
                $allDefinitions = Get-ValidSiteSetupDefinition $SiteLocation $allDefinitions
    
                Write-Progress -Activity ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::PreparingNewSiteDialog)) -CurrentOperation ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::PreparingDialogOptions)) -PercentComplete 50
                ##Catalyst Changes
                $catalystSiteModules = [Sitecore.Data.Fields.MultilistField]$SiteLocation.Fields['Modules'];
                $nonSystemDefinitions = $catalystSiteModules.GetItems()  #$allDefinitions | ? { ([Sitecore.Data.Fields.CheckboxField]$_.Fields['IsSystemModule']).Checked -eq $false } | ? { $_.IncludeIfInstalled.Length -eq 0 } | ? { $_.HasChildren }
    
                $nonSystemDefinitions | % {
                    $contextItem = Get-Item -Path master: -ID $_.ID
                    $key = "$($_.Fields['Name'].Value)"
                    $translatedFeatureName = $contextItem.Fields['Name'].Value
                    if ([string]::IsNullOrEmpty($translatedFeatureName)) {
                        $translatedFeatureName = $key
                    }
                    if ($dialogOptions.Contains($translatedFeatureName)) {
                        $index = 2
                        do {
                            $translatedFeatureName = $translatedFeatureName + " [$index]"
                            $index++
                        } while ($dialogOptions.Contains($translatedFeatureName))
                    }
    
                    $dialogOptions.Add($translatedFeatureName, $_.ID)
                }
                ##Catalyst Changes
                $preSelectedDefinitions = $nonSystemDefinitions | ? { ([Sitecore.Data.Fields.CheckboxField]$_.Fields['IncludeByDefault']).Checked -eq $true } | % { $_.ID }
    
                $languages = [ordered]@{}
                Get-ChildItem -Path "/sitecore/system/languages" | % { $languages[$_.Name] = $_.Name } > $null
    
                $dialogOptions = Get-OrderedDictionaryByKey $dialogOptions
                Write-Progress -Activity ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::PreparingNewSiteDialog)) -CurrentOperation ([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::OpeningNewSiteDialog)) -PercentComplete 100
    
                $siteName = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::NewSite)
                $hostName = "*"
                $virtualFolder = "/"
                $language = "en"
                
                $parameters = New-Object System.Collections.ArrayList  
            
    
                $baseParameters = @(
                    @{ Name = "siteLocation"; Source = "DataSource=/sitecore/content&DatabaseName=master&IncludeTemplatesForSelection=JSS Site Folder"; editor = "droptree"; Value = $RootItem; Title = [Sitecore.Globalization.Translate]::Text("Site Location"); Tab = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::General);  }, `
                    @{ Name = "siteName"; Title = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::SiteName); Tab = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::General); }, `
                    @{ Name = "language"; Options = $languages; Title = [Sitecore.Globalization.Translate]::Text("Language"); Tab = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::General); }, `
                    ## Catalyst Base Page Designs
                    @{ Name = "theme"; Source = "DataSource=/sitecore/system/Settings/Foundation/Catalyst/Theming&DatabaseName=master&IncludeTemplatesForSelection=ThemeConfiguration"; editor = "droptree"; Title = [Sitecore.Globalization.Translate]::Text("Theme - Select or leave it empty to create a new theme for site"); Tip = "If theme is not selected, a new one will be created"; Tab = [Sitecore.Globalization.Translate]::Text("Theme") };  `            
                )
                
                if (!$Blueprint) {
                    $baseParameters += @{ Name = "hostName"; Title = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::HostName); Tab = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::General) }
                    $baseParameters += @{ Name = "virtualFolder"; Title = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::VirtualFolder); Tab = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::General)} 
                }
    
                if ($dialogOptions.Count -gt 0) {
                    $baseParameters += @{ Name = "preSelectedDefinitions"; Title = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::Features); Options = $dialogOptions; Editor = "checklist"; Tip = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::SelectTheFeaturesWhichShouldBeUsedInSite); Height = "330px"; Tab = [Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::Features); }
                }
                
                $settings = New-Object System.Collections.ArrayList
                $parameters.AddRange($baseParameters)
                
                if (!$Blueprint) {
                    $allowedFields = "GraphQLEndpoint", "DeploymentSecret"
                    $siteSettings = (New-Object Sitecore.XA.JSS.Foundation.Scaffolding.SiteSettingsModelBuilder).Create() | ? { $allowedFields.Contains($_.Name) -eq $true }
                    $siteSettings | % {
                        $settings.Add($_.Name) > $null
                        Set-Variable $_.Name $_.Value
                        $ht = @{Name = $_.Name; Title = $_.Title; Tab = $_.Tab}
                        if ($_.Editor -eq "droptree") {
                            $ht["Editor"] = $_.Editor
                            $ht["Source"] = $_.Source
                        }
                        if ($_.Editor -eq "check") {
                            $ht["Editor"] = $_.Editor
                        }
                        $parameters.Add($ht) > $null
                    }
                }
                
                do {
                    $result = Read-Variable -Parameters `
                        $parameters `
                        -Description $([Sitecore.Globalization.Translate]::Text([Sitecore.XA.JSS.Foundation.Scaffolding.Texts]::ThisScriptWillCreateANewFullyFunctionalJSSSiteWithinYourSxaEnabledInstance)) `
                        -Title $([Sitecore.Globalization.Translate]::Text([Sitecore.XA.JSS.Foundation.Scaffolding.Texts]::CreateAJSSSite)) -Width 500 -Height 600 `
                        -OkButtonName $([Sitecore.Globalization.Translate]::Text("Ok")) -CancelButtonName $([Sitecore.Globalization.Translate]::Text("Cancel")) `
                        -Validator {
                        $siteName = $variables.siteName.Value;
                        
                        
                        $pattern = "^[\w][\w\s\-]*(\(\d{1,}\)){0,1}$"
                        if ($siteName.Length -gt 100) {
                            $variables.siteName.Error = $([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::ThelengthofthevalueistoolongPleasespecifyavalueoflesstha)) -f 100
                            continue
                        }
                        if ([System.Text.RegularExpressions.Regex]::IsMatch($siteName, $pattern, [System.Text.RegularExpressions.RegexOptions]::ECMAScript) -eq $false) {
                            $variables.siteName.Error = $([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::IsNotAValidName)) -f $siteName
                            continue
                        }
                        if ($forbiddenSiteNames -contains $siteName -eq $true) {
                            $variables.siteName.Error = $([Sitecore.Globalization.Translate]::Text([Sitecore.XA.Foundation.Scaffolding.Texts]::SiteWithThatNameAlreadyExists))
                            continue
                        }
                    } `
                        -ValidatorParameters @{forbiddenSiteNames = (Get-ForbiddenSiteName $siteLocation)}
    
                    if ($result -ne "ok") {
                        Close-Window
                        Exit
                    }
    
                    $definitionItems = New-Object System.Collections.ArrayList($null)
                    if ($preSelectedDefinitions ) {
                        Write-Verbose "Adding pre-selected features"
                        [Item[]]$preSelectedDefinitionItems = ($preSelectedDefinitions | % { Get-Item -Path master: -ID $_ })
                        $definitionItems.AddRange($preSelectedDefinitionItems)
                    }
                
                [Item[]]$systemFeatures = $allDefinitions | ? { ([Sitecore.Data.Fields.CheckboxField]$_.Fields['IsSystemModule']).Checked -eq $true }
                    if ($systemFeatures) {
                        Write-Verbose "Adding system features"
                        $definitionItems.AddRange($systemFeatures)
                    }
    
                    $invokedTenantActions = Get-InvokedTenantAction $TenantTemplates $SiteLocation
                    [Item[]]$autoIncludedFeatures = $allDefinitions | ? { $_.IncludeIfInstalled.Length -gt 0 } | ? {
                        $_.IncludeIfInstalled.Split("|") | ? {
                            $tenantActionID = $_
                            $invokedTenantActions | ? { $_.ID -eq $tenantActionID }
                        }
                    }
                    if ($autoIncludedFeatures) {
                        Write-Verbose "Adding auto-included features"
                        $definitionItems.AddRange($autoIncludedFeatures)
                    }
                    
                    $model = New-Object Sitecore.XA.JSS.Foundation.Scaffolding.Models.CreateNewJSSSiteModel
                    $model.SiteName = $siteName.TrimEnd(" ")	    
                    $model.DisplayName = $model.SiteName # fallback value
                    $model.DefinitionItems = $definitionItems
                    $model.Language = $language
                    $model.HostName = $hostName
                    $model.VirtualFolder = $virtualFolder
                    $model.SiteLocation = $SiteLocation
                    #catalyst theme 
                    if($null -ne $theme){
                        $model.ThemeName = $theme.ID.ToString()
                    }
                    $nameValue = New-Object System.Collections.Specialized.NameValueCollection
                    $settings | % {
                        $value = Get-Variable $_ -ValueOnly
                        $nameValue.Add($_, $value) > $null
                    }
                    $nameValue.Add("ImportLanguage", $language)
                    $nameValue.Add("Name", $model.SiteName)
                    $model.SiteSettings = $nameValue
                    $inputValidationResult = Invoke-InputValidationStep $Model.DefinitionItems $Model
                } while (-not($inputValidationResult))
                return $model
            }
    
            end {
                Write-Verbose "Cmdlet Get-NewJSSSiteDialog - End"
            }
        }
- ID: "dbbbeca1-21c7-4906-9dd2-493c1efa59a2"
  Hint: __Shared revision
  Value: "36008987-55eb-4745-9045-9d1b6d2c6dad"
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20221127T005611Z
    - ID: "52807595-0f8f-4b20-8d2a-cb71d28c6103"
      Hint: __Owner
      Value: |
        sitecore\ramkumar.nambhi@valtech.com
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\ramkumar.nambhi@valtech.com
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "9f59fb06-9c36-42d5-b63d-353e95667380"
    - ID: "badd9cf9-53e0-4d0c-bcc0-2d784c282f6a"
      Hint: __Updated by
      Value: |
        sitecore\ramkumar.nambhi@valtech.com
    - ID: "d9cf14b1-fa16-4ba6-9288-e8a174d4d522"
      Hint: __Updated
      Value: 20250506T135436Z
